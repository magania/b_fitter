/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOANGLE
#define ROOANGLE

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

#include "Math/SpecFuncMathMore.h"


class RooAngle : public RooAbsPdf {
public:
  RooAngle() {} ; 
  RooAngle(const char *name, const char *title,
	      RooAbsReal& _cpsi,
	      RooAbsReal& _ctheta,
	      RooAbsReal& _phi,
	      RooAbsReal& _e01m1,
	      RooAbsReal& _e01p0,
	      RooAbsReal& _e01p1,
	      RooAbsReal& _e02m2,
	      RooAbsReal& _e02m1,
	      RooAbsReal& _e02p0,
	      RooAbsReal& _e02p1,
	      RooAbsReal& _e02p2,
	      RooAbsReal& _e20p0,
	      RooAbsReal& _e21m1,
	      RooAbsReal& _e21p0,
	      RooAbsReal& _e21p1,
	      RooAbsReal& _e22m2,
	      RooAbsReal& _e22m1,
	      RooAbsReal& _e22p0,
	      RooAbsReal& _e22p1,
	      RooAbsReal& _e22p2);
  RooAngle(const RooAngle& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooAngle(*this,newname); }
  inline virtual ~RooAngle() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy cpsi ;
  RooRealProxy ctheta ;
  RooRealProxy phi ;
  RooRealProxy e01m1 ;
  RooRealProxy e01p0 ;
  RooRealProxy e01p1 ;
  RooRealProxy e02m2 ;
  RooRealProxy e02m1 ;
  RooRealProxy e02p0 ;
  RooRealProxy e02p1 ;
  RooRealProxy e02p2 ;
  RooRealProxy e20p0 ;
  RooRealProxy e21m1 ;
  RooRealProxy e21p0 ;
  RooRealProxy e21p1 ;
  RooRealProxy e22m2 ;
  RooRealProxy e22m1 ;
  RooRealProxy e22p0 ;
  RooRealProxy e22p1 ;
  RooRealProxy e22p2 ;
 
  Double_t HarmonicSphericalY(int l, int m) const ;
  Double_t evaluate() const ;

private:

//  ClassDef(RooAngle,1) // Your description goes here...
};
 
#endif
