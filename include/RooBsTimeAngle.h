/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOBSTIMEANGLE
#define ROOBSTIMEANGLE

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

#include "TComplex.h"
#include "Math/SpecFuncMathMore.h"
#include "TRandom3.h"

class RooBsTimeAngle : public RooAbsPdf {
public:
  RooBsTimeAngle() {} ; 
  RooBsTimeAngle(const char *name, const char *title,
	      RooAbsReal& _t,
	      RooAbsReal& _et,
	      RooAbsReal& _cpsi,
	      RooAbsReal& _ctheta,
	      RooAbsReal& _phi,
	      RooAbsReal& _D,
	      RooAbsReal& _a0,
	      RooAbsReal& _al,
	      RooAbsReal& _ap,
	      RooAbsReal& _DG,
	      RooAbsReal& _Dm,
	      RooAbsReal& _tau,
	      RooAbsReal& _beta,
	      RooAbsReal& _delta_l,
	      RooAbsReal& _delta_p,
	      RooAbsReal& _delta_s,
	      RooAbsReal& _fs,
	      RooAbsReal& _s);

  RooBsTimeAngle(const char *name, const char *title,
              RooAbsReal& _t,
              RooAbsReal& _cpsi,
              RooAbsReal& _ctheta,
              RooAbsReal& _phi,
              RooAbsReal& _D,
              RooAbsReal& _a0,
              RooAbsReal& _al,
              RooAbsReal& _ap,
              RooAbsReal& _DG,
              RooAbsReal& _Dm,
              RooAbsReal& _tau,
              RooAbsReal& _beta,
              RooAbsReal& _delta_l,
              RooAbsReal& _delta_p,
              RooAbsReal& _delta_s,
              RooAbsReal& _fs);

  RooBsTimeAngle(const RooBsTimeAngle& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooBsTimeAngle(*this,newname); }
  inline virtual ~RooBsTimeAngle() { }
  ClassDef(RooBsTimeAngle,1) // B0s Time and Angular decay PDF

protected:

  RooRealProxy t ;
  RooRealProxy et ;
  RooRealProxy cpsi ;
  RooRealProxy ctheta ;
  RooRealProxy phi ;
  RooRealProxy D ;
  RooRealProxy a0 ;
  RooRealProxy al ;
  RooRealProxy ap ;
  RooRealProxy DG ;
  RooRealProxy Dm ;
  RooRealProxy tau ;
  RooRealProxy beta ;
  RooRealProxy delta_l ;
  RooRealProxy delta_p ;
  RooRealProxy delta_s ;
  RooRealProxy fs ;
  RooRealProxy s ;

 TRandom3 _aleatorio;
  
  Double_t evaluate() const ;
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /* rangeName*/) const ;
  Double_t analyticalIntegral(Int_t code, const char* range) const ;
  Int_t getGenerator(const RooArgSet& directVars, RooArgSet &generateVars, Bool_t staticInitOK) const ;
  void initGenerator(Int_t code);
  void generateEvent(Int_t code);

private:

inline Double_t HarmonicSphericalY(int l, int m, Double_t ctheta, Double_t phi) const;
inline void acceptance(Double_t& acceptance, Double_t ctheta, Double_t phi) const;
inline void rho_Bb(Double_t& rho_Bb, Double_t fs, Double_t& P_Bb, Double_t& Q_Bb, TComplex& CDAminusB, TComplex& CDAplusB, Double_t& fb_minus_sq, TComplex &fb_fb_star, TComplex& I_mu) const;    //8.19 8.20
inline void P_Bb(Double_t &P_Bb, Double_t &CDAplusAplus, Double_t &CDAminusAminus, TComplex &CDAplusAminus, Double_t &fb_plus_sq, Double_t &fb_minus_sq, TComplex &fb_fb_star) const ;    //5.5 5.6
inline void Q_Bb(Double_t &Q_Bb, Double_t &CDBB, Double_t &fb_minus_sq) const ;    //8.15 8.16
inline void AplusK(TComplex* AplusK, Double_t a0, Double_t al, Double_t delta_l) const ;    // 5.2
inline void AminusK(TComplex& AminusK, Double_t ap, Double_t delta_p) const;    // 5.3
inline void nhat(Double_t* nhat, Double_t ctheta, Double_t phi) const;    // 3.6
inline void CrossDot(TComplex &CD, TComplex* A, TComplex* B, Double_t* n) const;
inline void I_mu(TComplex &I_mu, Double_t fs, Double_t delta_s) const;    //8.10

/*
TComplex Erf(TComplex z) const;
TComplex Erf(double x0, double y0) const;
*/


#ifdef EFFBDT20
/*                  BDT 20                 */
static const Double_t e_00p0 = 2.45373;
static const Double_t e_01n1 = 0.00251517;
static const Double_t e_01p0 = -0.00356385;
static const Double_t e_01p1 = 0.00343191;
static const Double_t e_02n2 = 0.000824399;
static const Double_t e_02n1 = 0.00469868;
static const Double_t e_02p0 = 0.14931;
static const Double_t e_02p1 = 0.0175397;
static const Double_t e_02p2 = -0.262436;
#endif

#ifdef EFFBDT10 
static const Double_t e_00p0 = 2.58248;
static const Double_t e_01n1 = 0.00523811;
static const Double_t e_01p0 = -0.00765528;
static const Double_t e_01p1 = 0.0165984;
static const Double_t e_02n2 = 0.00653318;
static const Double_t e_02n1 = -0.000244699;
static const Double_t e_02p0 = 0.0650591;
static const Double_t e_02p1 = 0.0190528;
static const Double_t e_02p2 = -0.112404;
#endif

#ifdef EFFCUT
/*                  CUT                    */
static const Double_t e_00p0 = 2.46581;
static const Double_t e_01n1 = 0.00835404;
static const Double_t e_01p0 = -0.00260552;
static const Double_t e_01p1 = 0.00378741;
static const Double_t e_02n2 = 0.0133225;
static const Double_t e_02n1 = 0.00314119;
static const Double_t e_02p0 = 0.0867515;
static const Double_t e_02p1 = 0.0162581;
static const Double_t e_02p2 = -0.154321;
#endif


bool _resolution;

static const bool __debug = false;
static const bool __debug2 = false;
static const bool __debug3 = false;
static const bool __debug4 = false;

static const bool __fast = false;
};
 
#endif
